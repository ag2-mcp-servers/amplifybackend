# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-28T09:33:05+00:00

from __future__ import annotations

from enum import Enum
from typing import Any, Dict, List, Optional

from pydantic import BaseModel, Field, RootModel, conint


class AdditionalConstraintsElement(Enum):
    REQUIRE_DIGIT = 'REQUIRE_DIGIT'
    REQUIRE_LOWERCASE = 'REQUIRE_LOWERCASE'
    REQUIRE_SYMBOL = 'REQUIRE_SYMBOL'
    REQUIRE_UPPERCASE = 'REQUIRE_UPPERCASE'


class AuthResources(Enum):
    USER_POOL_ONLY = 'USER_POOL_ONLY'
    IDENTITY_POOL_AND_USER_POOL = 'IDENTITY_POOL_AND_USER_POOL'


class AuthenticatedElement(Enum):
    READ = 'READ'
    CREATE_AND_UPDATE = 'CREATE_AND_UPDATE'
    DELETE = 'DELETE'


class BadRequestException(RootModel[Any]):
    root: Any


class CreateTokenRequest(BaseModel):
    pass


class DeleteBackendRequest(BaseModel):
    pass


class DeleteTokenRequest(BaseModel):
    pass


class DeliveryMethod(Enum):
    EMAIL = 'EMAIL'
    SMS = 'SMS'


class GatewayTimeoutException(RootModel[Any]):
    root: Any


class GetBackendJobRequest(BaseModel):
    pass


class GetTokenRequest(BaseModel):
    pass


class ListOfAdditionalConstraintsElement(RootModel[List[AdditionalConstraintsElement]]):
    root: List[AdditionalConstraintsElement]


class ListOfAuthenticatedElement(RootModel[List[AuthenticatedElement]]):
    root: List[AuthenticatedElement]


class MFAMode(Enum):
    ON = 'ON'
    OFF = 'OFF'
    OPTIONAL = 'OPTIONAL'


class MfaTypesElement(Enum):
    SMS = 'SMS'
    TOTP = 'TOTP'


class Mode(Enum):
    API_KEY = 'API_KEY'
    AWS_IAM = 'AWS_IAM'
    AMAZON_COGNITO_USER_POOLS = 'AMAZON_COGNITO_USER_POOLS'
    OPENID_CONNECT = 'OPENID_CONNECT'


class NotFoundException(RootModel[Any]):
    root: Any


class OAuthGrantType(Enum):
    CODE = 'CODE'
    IMPLICIT = 'IMPLICIT'


class OAuthScopesElement(Enum):
    PHONE = 'PHONE'
    EMAIL = 'EMAIL'
    OPENID = 'OPENID'
    PROFILE = 'PROFILE'
    AWS_COGNITO_SIGNIN_USER_ADMIN = 'AWS_COGNITO_SIGNIN_USER_ADMIN'


class RemoveBackendConfigRequest(BaseModel):
    pass


class RequiredSignUpAttributesElement(Enum):
    ADDRESS = 'ADDRESS'
    BIRTHDATE = 'BIRTHDATE'
    EMAIL = 'EMAIL'
    FAMILY_NAME = 'FAMILY_NAME'
    GENDER = 'GENDER'
    GIVEN_NAME = 'GIVEN_NAME'
    LOCALE = 'LOCALE'
    MIDDLE_NAME = 'MIDDLE_NAME'
    NAME = 'NAME'
    NICKNAME = 'NICKNAME'
    PHONE_NUMBER = 'PHONE_NUMBER'
    PICTURE = 'PICTURE'
    PREFERRED_USERNAME = 'PREFERRED_USERNAME'
    PROFILE = 'PROFILE'
    UPDATED_AT = 'UPDATED_AT'
    WEBSITE = 'WEBSITE'
    ZONE_INFO = 'ZONE_INFO'


class ResolutionStrategy(Enum):
    OPTIMISTIC_CONCURRENCY = 'OPTIMISTIC_CONCURRENCY'
    LAMBDA = 'LAMBDA'
    AUTOMERGE = 'AUTOMERGE'
    NONE = 'NONE'


class ResourceConfig(BaseModel):
    pass


class Service(Enum):
    COGNITO = 'COGNITO'


class ServiceName(Enum):
    S3 = 'S3'


class SignInMethod(Enum):
    EMAIL = 'EMAIL'
    EMAIL_AND_PHONE_NUMBER = 'EMAIL_AND_PHONE_NUMBER'
    PHONE_NUMBER = 'PHONE_NUMBER'
    USERNAME = 'USERNAME'


class Status(Enum):
    LATEST = 'LATEST'
    STALE = 'STALE'


class TooManyRequestsException(RootModel[Any]):
    root: Any


class UnAuthenticatedElement(Enum):
    READ = 'READ'
    CREATE_AND_UPDATE = 'CREATE_AND_UPDATE'
    DELETE = 'DELETE'


class FieldBoolean(RootModel[bool]):
    root: bool


class FieldDouble(RootModel[float]):
    root: float


class FieldIntegerMin1Max25(RootModel[conint(ge=1, le=25)]):
    root: conint(ge=1, le=25)


class FieldString(RootModel[str]):
    root: str


class BackendPostRequest(BaseModel):
    appId: str = Field(..., description='The app ID.')
    appName: str = Field(..., description='The name of the app.')
    backendEnvironmentName: str = Field(
        ..., description='The name of the backend environment.'
    )
    resourceConfig: Optional[Dict[str, Any]] = Field(
        None,
        description='Defines the resource configuration for the data model in your Amplify project.',
    )
    resourceName: Optional[str] = Field(None, description='The name of the resource.')


class BackendAppIdApiBackendEnvironmentNameGenerateModelsPostRequest(BaseModel):
    resourceName: str = Field(..., description='The name of this resource.')


class BackendAppIdApiBackendEnvironmentNameGetModelsPostRequest(BaseModel):
    resourceName: str = Field(..., description='The name of this resource.')


class BackendAppIdAuthBackendEnvironmentNameDetailsPostRequest(BaseModel):
    resourceName: str = Field(..., description='The name of this resource.')


class BackendAppIdAuthBackendEnvironmentNameImportPostRequest(BaseModel):
    identityPoolId: Optional[str] = Field(
        None, description='The ID of the Amazon Cognito identity pool.'
    )
    nativeClientId: str = Field(
        ..., description='The ID of the Amazon Cognito native client.'
    )
    userPoolId: str = Field(..., description='The ID of the Amazon Cognito user pool.')
    webClientId: str = Field(
        ..., description='The ID of the Amazon Cognito web client.'
    )


class BackendAppIdAuthBackendEnvironmentNameRemovePostRequest(BaseModel):
    resourceName: str = Field(..., description='The name of this resource.')


class BackendAppIdConfigPostRequest(BaseModel):
    backendManagerAppId: Optional[str] = Field(
        None, description='The app ID for the backend manager.'
    )


class LoginAuthConfig(BaseModel):
    AwsCognitoIdentityPoolId: Optional[FieldString] = None
    AwsCognitoRegion: Optional[FieldString] = None
    AwsUserPoolsId: Optional[FieldString] = None
    AwsUserPoolsWebClientId: Optional[FieldString] = None


class BackendAppIdConfigUpdatePostRequest(BaseModel):
    loginAuthConfig: Optional[LoginAuthConfig] = Field(
        None, description='The request object for this operation.'
    )


class BackendAppIdDetailsPostRequest(BaseModel):
    backendEnvironmentName: Optional[str] = Field(
        None, description='The name of the backend environment.'
    )


class BackendAppIdEnvironmentsBackendEnvironmentNameClonePostRequest(BaseModel):
    targetEnvironmentName: str = Field(
        ...,
        description='The name of the destination backend environment to be created.',
    )


class BackendAppIdJobBackendEnvironmentNamePostRequest(BaseModel):
    jobId: Optional[str] = Field(None, description='The ID for the job.')
    maxResults: Optional[conint(ge=1, le=25)] = Field(
        None, description='The maximum number of results that you want in the response.'
    )
    nextToken: Optional[str] = Field(
        None, description='The token for the next set of results.'
    )
    operation: Optional[str] = Field(
        None,
        description='Filters the list of response objects to include only those with the specified operation name.',
    )
    status: Optional[str] = Field(
        None,
        description='Filters the list of response objects to include only those with the specified status.',
    )


class BackendAppIdJobBackendEnvironmentNameJobIdPostRequest(BaseModel):
    operation: Optional[str] = Field(
        None,
        description='Filters the list of response objects to include only those with the specified operation name.',
    )
    status: Optional[str] = Field(
        None,
        description='Filters the list of response objects to include only those with the specified status.',
    )


class BackendAppIdRemovePostRequest(BaseModel):
    cleanAmplifyApp: Optional[bool] = Field(
        None,
        description='Cleans up the Amplify Console app if this value is set to true.',
    )


class BackendAppIdStorageBackendEnvironmentNameDetailsPostRequest(BaseModel):
    resourceName: str = Field(..., description='The name of the storage resource.')


class BackendAppIdStorageBackendEnvironmentNameImportPostRequest(BaseModel):
    bucketName: Optional[str] = Field(None, description='The name of the S3 bucket.')
    serviceName: ServiceName = Field(
        ..., description='The name of the storage service.'
    )


class BackendAppIdStorageBackendEnvironmentNameRemovePostRequest(BaseModel):
    resourceName: str = Field(..., description='The name of the storage resource.')
    serviceName: ServiceName = Field(
        ..., description='The name of the storage service.'
    )


class S3BucketsPostRequest(BaseModel):
    nextToken: Optional[str] = Field(None, description='Reserved for future use.')


class BackendAPIAppSyncAuthSettings(BaseModel):
    CognitoUserPoolId: Optional[FieldString] = None
    Description: Optional[FieldString] = None
    ExpirationTime: Optional[FieldDouble] = None
    OpenIDAuthTTL: Optional[FieldString] = None
    OpenIDClientId: Optional[FieldString] = None
    OpenIDIatTTL: Optional[FieldString] = None
    OpenIDIssueURL: Optional[FieldString] = None
    OpenIDProviderName: Optional[FieldString] = None


class BackendAPIAuthType(BaseModel):
    Mode_1: Optional[Mode] = Field(None, alias='Mode')
    Settings: Optional[BackendAPIAppSyncAuthSettings] = None


class BackendAPIConflictResolution(BaseModel):
    ResolutionStrategy_1: Optional[ResolutionStrategy] = Field(
        None, alias='ResolutionStrategy'
    )


class BackendAuthAppleProviderConfig(BaseModel):
    ClientId: Optional[FieldString] = None
    KeyId: Optional[FieldString] = None
    PrivateKey: Optional[FieldString] = None
    TeamId: Optional[FieldString] = None


class BackendAuthSocialProviderConfig(BaseModel):
    ClientId: Optional[FieldString] = None
    ClientSecret: Optional[FieldString] = None


class BackendJobRespObj(BaseModel):
    AppId: FieldString
    BackendEnvironmentName: FieldString
    CreateTime: Optional[FieldString] = None
    Error: Optional[FieldString] = None
    JobId: Optional[FieldString] = None
    Operation: Optional[FieldString] = None
    Status: Optional[FieldString] = None
    UpdateTime: Optional[FieldString] = None


class CloneBackendRequest(BaseModel):
    TargetEnvironmentName: FieldString


class CloneBackendResponse(BaseModel):
    AppId: Optional[FieldString] = None
    BackendEnvironmentName: Optional[FieldString] = None
    Error: Optional[FieldString] = None
    JobId: Optional[FieldString] = None
    Operation: Optional[FieldString] = None
    Status: Optional[FieldString] = None


class CreateBackendAPIResponse(BaseModel):
    AppId: Optional[FieldString] = None
    BackendEnvironmentName: Optional[FieldString] = None
    Error: Optional[FieldString] = None
    JobId: Optional[FieldString] = None
    Operation: Optional[FieldString] = None
    Status: Optional[FieldString] = None


class CreateBackendAuthIdentityPoolConfig(BaseModel):
    IdentityPoolName: FieldString
    UnauthenticatedLogin: FieldBoolean


class CreateBackendAuthPasswordPolicyConfig(BaseModel):
    AdditionalConstraints: Optional[ListOfAdditionalConstraintsElement] = None
    MinimumLength: FieldDouble


class CreateBackendAuthResponse(BaseModel):
    AppId: Optional[FieldString] = None
    BackendEnvironmentName: Optional[FieldString] = None
    Error: Optional[FieldString] = None
    JobId: Optional[FieldString] = None
    Operation: Optional[FieldString] = None
    Status: Optional[FieldString] = None


class CreateBackendConfigRequest(BaseModel):
    BackendManagerAppId: Optional[FieldString] = None


class CreateBackendConfigResponse(BaseModel):
    AppId: Optional[FieldString] = None
    BackendEnvironmentName: Optional[FieldString] = None
    JobId: Optional[FieldString] = None
    Status: Optional[FieldString] = None


class CreateBackendRequest(BaseModel):
    AppId: FieldString
    AppName: FieldString
    BackendEnvironmentName: FieldString
    ResourceConfig_1: Optional[ResourceConfig] = Field(None, alias='ResourceConfig')
    ResourceName: Optional[FieldString] = None


class CreateBackendResponse(BaseModel):
    AppId: Optional[FieldString] = None
    BackendEnvironmentName: Optional[FieldString] = None
    Error: Optional[FieldString] = None
    JobId: Optional[FieldString] = None
    Operation: Optional[FieldString] = None
    Status: Optional[FieldString] = None


class CreateBackendStorageResponse(BaseModel):
    AppId: Optional[FieldString] = None
    BackendEnvironmentName: Optional[FieldString] = None
    JobId: Optional[FieldString] = None
    Status: Optional[FieldString] = None


class CreateTokenResponse(BaseModel):
    AppId: Optional[FieldString] = None
    ChallengeCode: Optional[FieldString] = None
    SessionId: Optional[FieldString] = None
    Ttl: Optional[FieldString] = None


class DeleteBackendAPIResponse(BaseModel):
    AppId: Optional[FieldString] = None
    BackendEnvironmentName: Optional[FieldString] = None
    Error: Optional[FieldString] = None
    JobId: Optional[FieldString] = None
    Operation: Optional[FieldString] = None
    Status: Optional[FieldString] = None


class DeleteBackendAuthRequest(BaseModel):
    ResourceName: FieldString


class DeleteBackendAuthResponse(BaseModel):
    AppId: Optional[FieldString] = None
    BackendEnvironmentName: Optional[FieldString] = None
    Error: Optional[FieldString] = None
    JobId: Optional[FieldString] = None
    Operation: Optional[FieldString] = None
    Status: Optional[FieldString] = None


class DeleteBackendResponse(BaseModel):
    AppId: Optional[FieldString] = None
    BackendEnvironmentName: Optional[FieldString] = None
    Error: Optional[FieldString] = None
    JobId: Optional[FieldString] = None
    Operation: Optional[FieldString] = None
    Status: Optional[FieldString] = None


class DeleteBackendStorageRequest(BaseModel):
    ResourceName: FieldString
    ServiceName_1: ServiceName = Field(..., alias='ServiceName')


class DeleteBackendStorageResponse(BaseModel):
    AppId: Optional[FieldString] = None
    BackendEnvironmentName: Optional[FieldString] = None
    JobId: Optional[FieldString] = None
    Status: Optional[FieldString] = None


class DeleteTokenResponse(BaseModel):
    IsSuccess: Optional[FieldBoolean] = None


class EmailSettings(BaseModel):
    EmailMessage: Optional[FieldString] = None
    EmailSubject: Optional[FieldString] = None


class GenerateBackendAPIModelsRequest(BaseModel):
    ResourceName: FieldString


class GenerateBackendAPIModelsResponse(BaseModel):
    AppId: Optional[FieldString] = None
    BackendEnvironmentName: Optional[FieldString] = None
    Error: Optional[FieldString] = None
    JobId: Optional[FieldString] = None
    Operation: Optional[FieldString] = None
    Status: Optional[FieldString] = None


class GetBackendAPIModelsRequest(BaseModel):
    ResourceName: FieldString


class GetBackendAPIModelsResponse(BaseModel):
    ModelIntrospectionSchema: Optional[FieldString] = None
    Models: Optional[FieldString] = None
    Status_1: Optional[Status] = Field(None, alias='Status')


class GetBackendAuthRequest(BaseModel):
    ResourceName: FieldString


class GetBackendJobResponse(BaseModel):
    AppId: Optional[FieldString] = None
    BackendEnvironmentName: Optional[FieldString] = None
    CreateTime: Optional[FieldString] = None
    Error: Optional[FieldString] = None
    JobId: Optional[FieldString] = None
    Operation: Optional[FieldString] = None
    Status: Optional[FieldString] = None
    UpdateTime: Optional[FieldString] = None


class GetBackendRequest(BaseModel):
    BackendEnvironmentName: Optional[FieldString] = None


class GetBackendStorageRequest(BaseModel):
    ResourceName: FieldString


class GetTokenResponse(BaseModel):
    AppId: Optional[FieldString] = None
    ChallengeCode: Optional[FieldString] = None
    SessionId: Optional[FieldString] = None
    Ttl: Optional[FieldString] = None


class ImportBackendAuthRequest(BaseModel):
    IdentityPoolId: Optional[FieldString] = None
    NativeClientId: FieldString
    UserPoolId: FieldString
    WebClientId: FieldString


class ImportBackendAuthResponse(BaseModel):
    AppId: Optional[FieldString] = None
    BackendEnvironmentName: Optional[FieldString] = None
    Error: Optional[FieldString] = None
    JobId: Optional[FieldString] = None
    Operation: Optional[FieldString] = None
    Status: Optional[FieldString] = None


class ImportBackendStorageRequest(BaseModel):
    BucketName: Optional[FieldString] = None
    ServiceName_1: ServiceName = Field(..., alias='ServiceName')


class ImportBackendStorageResponse(BaseModel):
    AppId: Optional[FieldString] = None
    BackendEnvironmentName: Optional[FieldString] = None
    JobId: Optional[FieldString] = None
    Status: Optional[FieldString] = None


class ListBackendJobsRequest(BaseModel):
    JobId: Optional[FieldString] = None
    MaxResults: Optional[FieldIntegerMin1Max25] = None
    NextToken: Optional[FieldString] = None
    Operation: Optional[FieldString] = None
    Status: Optional[FieldString] = None


class ListOfBackendAPIAuthType(RootModel[List[BackendAPIAuthType]]):
    root: List[BackendAPIAuthType]


class ListOfBackendJobRespObj(RootModel[List[BackendJobRespObj]]):
    root: List[BackendJobRespObj]


class ListOfMfaTypesElement(RootModel[List[MfaTypesElement]]):
    root: List[MfaTypesElement]


class ListOfOAuthScopesElement(RootModel[List[OAuthScopesElement]]):
    root: List[OAuthScopesElement]


class ListOfRequiredSignUpAttributesElement(
    RootModel[List[RequiredSignUpAttributesElement]]
):
    root: List[RequiredSignUpAttributesElement]


class ListOfUnAuthenticatedElement(RootModel[List[UnAuthenticatedElement]]):
    root: List[UnAuthenticatedElement]


class ListOfString(RootModel[List[FieldString]]):
    root: List[FieldString]


class ListS3BucketsRequest(BaseModel):
    NextToken: Optional[FieldString] = None


class LoginAuthConfigReqObj(BaseModel):
    AwsCognitoIdentityPoolId: Optional[FieldString] = None
    AwsCognitoRegion: Optional[FieldString] = None
    AwsUserPoolsId: Optional[FieldString] = None
    AwsUserPoolsWebClientId: Optional[FieldString] = None


class RemoveAllBackendsRequest(BaseModel):
    CleanAmplifyApp: Optional[FieldBoolean] = None


class RemoveAllBackendsResponse(BaseModel):
    AppId: Optional[FieldString] = None
    Error: Optional[FieldString] = None
    JobId: Optional[FieldString] = None
    Operation: Optional[FieldString] = None
    Status: Optional[FieldString] = None


class RemoveBackendConfigResponse(BaseModel):
    Error: Optional[FieldString] = None


class S3BucketInfo(BaseModel):
    CreationDate: Optional[FieldString] = None
    Name: Optional[FieldString] = None


class Settings(BaseModel):
    MfaTypes: Optional[ListOfMfaTypesElement] = None
    SmsMessage: Optional[FieldString] = None


class SmsSettings(BaseModel):
    SmsMessage: Optional[FieldString] = None


class SocialProviderSettings(BaseModel):
    Facebook: Optional[BackendAuthSocialProviderConfig] = None
    Google: Optional[BackendAuthSocialProviderConfig] = None
    LoginWithAmazon: Optional[BackendAuthSocialProviderConfig] = None
    SignInWithApple: Optional[BackendAuthAppleProviderConfig] = None


class UpdateBackendAPIResponse(BaseModel):
    AppId: Optional[FieldString] = None
    BackendEnvironmentName: Optional[FieldString] = None
    Error: Optional[FieldString] = None
    JobId: Optional[FieldString] = None
    Operation: Optional[FieldString] = None
    Status: Optional[FieldString] = None


class UpdateBackendAuthForgotPasswordConfig(BaseModel):
    DeliveryMethod_1: Optional[DeliveryMethod] = Field(None, alias='DeliveryMethod')
    EmailSettings_1: Optional[EmailSettings] = Field(None, alias='EmailSettings')
    SmsSettings_1: Optional[SmsSettings] = Field(None, alias='SmsSettings')


class UpdateBackendAuthIdentityPoolConfig(BaseModel):
    UnauthenticatedLogin: Optional[FieldBoolean] = None


class UpdateBackendAuthMFAConfig(BaseModel):
    MFAMode_1: Optional[MFAMode] = Field(None, alias='MFAMode')
    Settings_1: Optional[Settings] = Field(None, alias='Settings')


class UpdateBackendAuthOAuthConfig(BaseModel):
    DomainPrefix: Optional[FieldString] = None
    OAuthGrantType_1: Optional[OAuthGrantType] = Field(None, alias='OAuthGrantType')
    OAuthScopes: Optional[ListOfOAuthScopesElement] = None
    RedirectSignInURIs: Optional[ListOfString] = None
    RedirectSignOutURIs: Optional[ListOfString] = None
    SocialProviderSettings_1: Optional[SocialProviderSettings] = Field(
        None, alias='SocialProviderSettings'
    )


class UpdateBackendAuthPasswordPolicyConfig(BaseModel):
    AdditionalConstraints: Optional[ListOfAdditionalConstraintsElement] = None
    MinimumLength: Optional[FieldDouble] = None


class UpdateBackendAuthResponse(BaseModel):
    AppId: Optional[FieldString] = None
    BackendEnvironmentName: Optional[FieldString] = None
    Error: Optional[FieldString] = None
    JobId: Optional[FieldString] = None
    Operation: Optional[FieldString] = None
    Status: Optional[FieldString] = None


class UpdateBackendAuthVerificationMessageConfig(BaseModel):
    DeliveryMethod_1: DeliveryMethod = Field(..., alias='DeliveryMethod')
    EmailSettings_1: Optional[EmailSettings] = Field(None, alias='EmailSettings')
    SmsSettings_1: Optional[SmsSettings] = Field(None, alias='SmsSettings')


class UpdateBackendConfigRequest(BaseModel):
    LoginAuthConfig: Optional[LoginAuthConfigReqObj] = None


class UpdateBackendConfigResponse(BaseModel):
    AppId: Optional[FieldString] = None
    BackendManagerAppId: Optional[FieldString] = None
    Error: Optional[FieldString] = None
    LoginAuthConfig: Optional[LoginAuthConfigReqObj] = None


class UpdateBackendJobRequest(BaseModel):
    Operation: Optional[FieldString] = None
    Status: Optional[FieldString] = None


class UpdateBackendJobResponse(BaseModel):
    AppId: Optional[FieldString] = None
    BackendEnvironmentName: Optional[FieldString] = None
    CreateTime: Optional[FieldString] = None
    Error: Optional[FieldString] = None
    JobId: Optional[FieldString] = None
    Operation: Optional[FieldString] = None
    Status: Optional[FieldString] = None
    UpdateTime: Optional[FieldString] = None


class UpdateBackendStorageResponse(BaseModel):
    AppId: Optional[FieldString] = None
    BackendEnvironmentName: Optional[FieldString] = None
    JobId: Optional[FieldString] = None
    Status: Optional[FieldString] = None


class ResourceConfig1(BaseModel):
    AdditionalAuthTypes: Optional[ListOfBackendAPIAuthType] = None
    ApiName: Optional[FieldString] = None
    ConflictResolution: Optional[BackendAPIConflictResolution] = None
    DefaultAuthType: Optional[BackendAPIAuthType] = None
    Service: Optional[FieldString] = None
    TransformSchema: Optional[FieldString] = None


class BackendAppIdApiPostRequest(BaseModel):
    backendEnvironmentName: str = Field(
        ..., description='The name of the backend environment.'
    )
    resourceConfig: ResourceConfig1 = Field(
        ...,
        description='The resource config for the data model, configured as a part of the Amplify project.',
    )
    resourceName: str = Field(..., description='The name of this resource.')


class BackendAppIdApiBackendEnvironmentNamePostRequest(BaseModel):
    resourceConfig: Optional[ResourceConfig1] = Field(
        None,
        description='The resource config for the data model, configured as a part of the Amplify project.',
    )
    resourceName: str = Field(..., description='The name of this resource.')


class BackendAppIdApiBackendEnvironmentNameDetailsPostRequest(BaseModel):
    resourceConfig: Optional[ResourceConfig1] = Field(
        None,
        description='The resource config for the data model, configured as a part of the Amplify project.',
    )
    resourceName: str = Field(..., description='The name of this resource.')


class BackendAppIdApiBackendEnvironmentNameRemovePostRequest(BaseModel):
    resourceConfig: Optional[ResourceConfig1] = Field(
        None,
        description='The resource config for the data model, configured as a part of the Amplify project.',
    )
    resourceName: str = Field(..., description='The name of this resource.')


class BackendAPIResourceConfig(BaseModel):
    AdditionalAuthTypes: Optional[ListOfBackendAPIAuthType] = None
    ApiName: Optional[FieldString] = None
    ConflictResolution: Optional[BackendAPIConflictResolution] = None
    DefaultAuthType: Optional[BackendAPIAuthType] = None
    Service: Optional[FieldString] = None
    TransformSchema: Optional[FieldString] = None


class BackendStoragePermissions(BaseModel):
    Authenticated: ListOfAuthenticatedElement
    UnAuthenticated: Optional[ListOfUnAuthenticatedElement] = None


class CreateBackendAPIRequest(BaseModel):
    BackendEnvironmentName: FieldString
    ResourceConfig: BackendAPIResourceConfig
    ResourceName: FieldString


class CreateBackendAuthForgotPasswordConfig(BaseModel):
    DeliveryMethod_1: DeliveryMethod = Field(..., alias='DeliveryMethod')
    EmailSettings_1: Optional[EmailSettings] = Field(None, alias='EmailSettings')
    SmsSettings_1: Optional[SmsSettings] = Field(None, alias='SmsSettings')


class CreateBackendAuthMFAConfig(BaseModel):
    MFAMode_1: MFAMode = Field(..., alias='MFAMode')
    Settings_1: Optional[Settings] = Field(None, alias='Settings')


class CreateBackendAuthOAuthConfig(BaseModel):
    DomainPrefix: Optional[FieldString] = None
    OAuthGrantType_1: OAuthGrantType = Field(..., alias='OAuthGrantType')
    OAuthScopes: ListOfOAuthScopesElement
    RedirectSignInURIs: ListOfString
    RedirectSignOutURIs: ListOfString
    SocialProviderSettings_1: Optional[SocialProviderSettings] = Field(
        None, alias='SocialProviderSettings'
    )


class CreateBackendAuthVerificationMessageConfig(BaseModel):
    DeliveryMethod_1: DeliveryMethod = Field(..., alias='DeliveryMethod')
    EmailSettings_1: Optional[EmailSettings] = Field(None, alias='EmailSettings')
    SmsSettings_1: Optional[SmsSettings] = Field(None, alias='SmsSettings')


class CreateBackendStorageResourceConfig(BaseModel):
    BucketName: Optional[FieldString] = None
    Permissions: BackendStoragePermissions
    ServiceName_1: ServiceName = Field(..., alias='ServiceName')


class DeleteBackendAPIRequest(BaseModel):
    ResourceConfig: Optional[BackendAPIResourceConfig] = None
    ResourceName: FieldString


class GetBackendAPIRequest(BaseModel):
    ResourceConfig: Optional[BackendAPIResourceConfig] = None
    ResourceName: FieldString


class GetBackendAPIResponse(BaseModel):
    AppId: Optional[FieldString] = None
    BackendEnvironmentName: Optional[FieldString] = None
    Error: Optional[FieldString] = None
    ResourceConfig: Optional[BackendAPIResourceConfig] = None
    ResourceName: Optional[FieldString] = None


class GetBackendResponse(BaseModel):
    AmplifyFeatureFlags: Optional[FieldString] = None
    AmplifyMetaConfig: Optional[FieldString] = None
    AppId: Optional[FieldString] = None
    AppName: Optional[FieldString] = None
    BackendEnvironmentList: Optional[ListOfString] = None
    BackendEnvironmentName: Optional[FieldString] = None
    Error: Optional[FieldString] = None


class GetBackendStorageResourceConfig(BaseModel):
    BucketName: Optional[FieldString] = None
    Imported: FieldBoolean
    Permissions: Optional[BackendStoragePermissions] = None
    ServiceName_1: ServiceName = Field(..., alias='ServiceName')


class GetBackendStorageResponse(BaseModel):
    AppId: Optional[FieldString] = None
    BackendEnvironmentName: Optional[FieldString] = None
    ResourceConfig: Optional[GetBackendStorageResourceConfig] = None
    ResourceName: Optional[FieldString] = None


class ListBackendJobsResponse(BaseModel):
    Jobs: Optional[ListOfBackendJobRespObj] = None
    NextToken: Optional[FieldString] = None


class ListOfS3BucketInfo(RootModel[List[S3BucketInfo]]):
    root: List[S3BucketInfo]


class ListS3BucketsResponse(BaseModel):
    Buckets: Optional[ListOfS3BucketInfo] = None
    NextToken: Optional[FieldString] = None


class UpdateBackendAPIRequest(BaseModel):
    ResourceConfig: Optional[BackendAPIResourceConfig] = None
    ResourceName: FieldString


class UpdateBackendAuthUserPoolConfig(BaseModel):
    ForgotPassword: Optional[UpdateBackendAuthForgotPasswordConfig] = None
    Mfa: Optional[UpdateBackendAuthMFAConfig] = None
    OAuth: Optional[UpdateBackendAuthOAuthConfig] = None
    PasswordPolicy: Optional[UpdateBackendAuthPasswordPolicyConfig] = None
    VerificationMessage: Optional[UpdateBackendAuthVerificationMessageConfig] = None


class UpdateBackendStorageResourceConfig(BaseModel):
    Permissions: BackendStoragePermissions
    ServiceName_1: ServiceName = Field(..., alias='ServiceName')


class ResourceConfig6(BaseModel):
    AuthResources_1: Optional[AuthResources] = Field(None, alias='AuthResources')
    IdentityPoolConfigs: Optional[UpdateBackendAuthIdentityPoolConfig] = None
    Service_1: Optional[Service] = Field(None, alias='Service')
    UserPoolConfigs: Optional[UpdateBackendAuthUserPoolConfig] = None


class BackendAppIdAuthBackendEnvironmentNamePostRequest(BaseModel):
    resourceConfig: ResourceConfig6 = Field(
        ...,
        description='Defines the resource configuration when updating an authentication resource in your Amplify project.',
    )
    resourceName: str = Field(..., description='The name of this resource.')


class ResourceConfig7(BaseModel):
    BucketName: Optional[FieldString] = None
    Permissions: Optional[BackendStoragePermissions] = None
    ServiceName_1: Optional[ServiceName] = Field(None, alias='ServiceName')


class BackendAppIdStoragePostRequest(BaseModel):
    backendEnvironmentName: str = Field(
        ..., description='The name of the backend environment.'
    )
    resourceConfig: ResourceConfig7 = Field(
        ..., description='The resource configuration for creating backend storage.'
    )
    resourceName: str = Field(..., description='The name of the storage resource.')


class ResourceConfig8(BaseModel):
    Permissions: Optional[BackendStoragePermissions] = None
    ServiceName_1: Optional[ServiceName] = Field(None, alias='ServiceName')


class BackendAppIdStorageBackendEnvironmentNamePostRequest(BaseModel):
    resourceConfig: ResourceConfig8 = Field(
        ..., description='The resource configuration for updating backend storage.'
    )
    resourceName: str = Field(..., description='The name of the storage resource.')


class CreateBackendAuthUserPoolConfig(BaseModel):
    ForgotPassword: Optional[CreateBackendAuthForgotPasswordConfig] = None
    Mfa: Optional[CreateBackendAuthMFAConfig] = None
    OAuth: Optional[CreateBackendAuthOAuthConfig] = None
    PasswordPolicy: Optional[CreateBackendAuthPasswordPolicyConfig] = None
    RequiredSignUpAttributes: ListOfRequiredSignUpAttributesElement
    SignInMethod_1: SignInMethod = Field(..., alias='SignInMethod')
    UserPoolName: FieldString
    VerificationMessage: Optional[CreateBackendAuthVerificationMessageConfig] = None


class CreateBackendStorageRequest(BaseModel):
    BackendEnvironmentName: FieldString
    ResourceConfig: CreateBackendStorageResourceConfig
    ResourceName: FieldString


class UpdateBackendAuthResourceConfig(BaseModel):
    AuthResources_1: AuthResources = Field(..., alias='AuthResources')
    IdentityPoolConfigs: Optional[UpdateBackendAuthIdentityPoolConfig] = None
    Service_1: Service = Field(..., alias='Service')
    UserPoolConfigs: UpdateBackendAuthUserPoolConfig


class UpdateBackendStorageRequest(BaseModel):
    ResourceConfig: UpdateBackendStorageResourceConfig
    ResourceName: FieldString


class ResourceConfig5(BaseModel):
    AuthResources_1: Optional[AuthResources] = Field(None, alias='AuthResources')
    IdentityPoolConfigs: Optional[CreateBackendAuthIdentityPoolConfig] = None
    Service_1: Optional[Service] = Field(None, alias='Service')
    UserPoolConfigs: Optional[CreateBackendAuthUserPoolConfig] = None


class BackendAppIdAuthPostRequest(BaseModel):
    backendEnvironmentName: str = Field(
        ..., description='The name of the backend environment.'
    )
    resourceConfig: ResourceConfig5 = Field(
        ...,
        description='Defines the resource configuration when creating an auth resource in your Amplify project.',
    )
    resourceName: str = Field(..., description='The name of this resource.')


class CreateBackendAuthResourceConfig(BaseModel):
    AuthResources_1: AuthResources = Field(..., alias='AuthResources')
    IdentityPoolConfigs: Optional[CreateBackendAuthIdentityPoolConfig] = None
    Service_1: Service = Field(..., alias='Service')
    UserPoolConfigs: CreateBackendAuthUserPoolConfig


class GetBackendAuthResponse(BaseModel):
    AppId: Optional[FieldString] = None
    BackendEnvironmentName: Optional[FieldString] = None
    Error: Optional[FieldString] = None
    ResourceConfig: Optional[CreateBackendAuthResourceConfig] = None
    ResourceName: Optional[FieldString] = None


class UpdateBackendAuthRequest(BaseModel):
    ResourceConfig: UpdateBackendAuthResourceConfig
    ResourceName: FieldString


class CreateBackendAuthRequest(BaseModel):
    BackendEnvironmentName: FieldString
    ResourceConfig: CreateBackendAuthResourceConfig
    ResourceName: FieldString
